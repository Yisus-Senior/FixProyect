package business;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;

import javafx.scene.control.ToggleGroup;
import javafx.stage.Stage;
import javafx.util.Duration;

import javax.swing.JOptionPane;

import data.MenuBreakfastData;
import data.MenuLunchData;
import domain.Menus;
import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.css.CssParser.ParseError;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;

import javafx.scene.control.ComboBox;

import javafx.scene.control.RadioButton;

public class GUIFormAddNewAlimentController {
	@FXML
	private Button btnReturnHome;
	@FXML
	private TextField tfPriceOfService;
	@FXML
	private TextField tfNameOfService;
	@FXML
	private ComboBox<String> cbSelectServiceDay;
	@FXML
	private RadioButton rbServiceScheduleBreakfast;
	@FXML
	private ToggleGroup serviceSchedule;
	@FXML
	private RadioButton rbServiceScheduleLunch;
	@FXML
	private Button btnSaveDataService;
	@FXML
	private Label lMessageErrors;

	// Event Listener on Button[#btnReturnHome].onAction
	@FXML
	public void returnToHome(ActionEvent event) {
		closeWindows();
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnSaveDataService].onAction
	@FXML
	public void saveDataService(ActionEvent event) {
		String message = validForm();
		
		if(message.equals("")) {
			int op = JOptionPane.showConfirmDialog(null,"Esta seguro de agregar un nuevo servicio para el dia " + 
					cbSelectServiceDay.getSelectionModel().getSelectedItem()+
					"al horario " + (rbServiceScheduleBreakfast.isSelected()?"Desayuno":"Almuerzo"));
			
			if(op==0) {
			Menus menu = new Menus();
			
			menu.setNamePlate(tfNameOfService.getText());
			menu.setPrice(Integer.parseInt(tfPriceOfService.getText()));

			//menu.setServiceDay(cbSelectServiceDay.getSelectionModel().getSelectedItem());
			switch (cbSelectServiceDay.getSelectionModel().getSelectedIndex()) {
			case 0:	
				if(rbServiceScheduleBreakfast.isSelected()) {
					MenuBreakfastData.saveMenu(menu,MenuBreakfastData.fileNameMondayBreakfast);
				}else{
					MenuLunchData.saveMenu(menu,MenuLunchData.fileNameMondayLunch);
					}
			
				break; 
			case 1:
				if(rbServiceScheduleBreakfast.isSelected()) {
					MenuBreakfastData.saveMenu(menu,MenuBreakfastData.fileNameTuesdayBreakfast);
				}else{
					MenuLunchData.saveMenu(menu,MenuLunchData.fileNameTuesdayLunch);
					}
				break;
			case 2:
				if(rbServiceScheduleBreakfast.isSelected()) {
					MenuBreakfastData.saveMenu(menu,MenuBreakfastData.fileNameWednesdayBreakfast);
				}else{
					MenuLunchData.saveMenu(menu,MenuLunchData.fileNameWednesdayLunch);
					}
				break;
			case 3:
				if(rbServiceScheduleBreakfast.isSelected()) {
					MenuBreakfastData.saveMenu(menu,MenuBreakfastData.fileNameThurdsdayBreakfast);
				}else{
					MenuLunchData.saveMenu(menu,MenuLunchData.fileNameThurdsdayLunch);
					}
				break;
			case 4:
				if(rbServiceScheduleBreakfast.isSelected()) {
					MenuBreakfastData.saveMenu(menu,MenuBreakfastData.fileNameFridayBreakfast);
				}else{
					MenuLunchData.saveMenu(menu,MenuLunchData.fileNameFridayLunch);
					}
				break;
				
			default:
				notifyAction("no se puedo guardar el servicio");
			}
			cleanForm();
			}
		}else {
			notifyAction(message);
		}
	}
	public void closeWindows() {
		
		try {
			
			FXMLLoader loader = new FXMLLoader(getClass().getResource("/presentation/GUIMenuHome.fxml"));
			
			Parent root = loader.load();
			Scene scene = new Scene(root);
			//scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm()); sino lo configuro se nececita agregar aqui
			Stage stage = new Stage();
			stage.setScene(scene);
			stage.show();
			Stage temp = (Stage)btnReturnHome.getScene().getWindow();
			temp.close();
		} catch(Exception e) {
			e.printStackTrace();
		}	
	}
	
	@FXML
	public void initialize() {
		cbSelectServiceDay.getItems().addAll("Lunes","Martes","Miercoles","Jueves","Viernes");
		cbSelectServiceDay.getSelectionModel().selectFirst();
	}
	
	private String validForm() {
		String message ="";
		
		if(tfNameOfService.getText().isBlank() || tfNameOfService.getText().isEmpty() || tfNameOfService.getText()==null) {
			message +="\t Ingrese el nombre del servicio correctamente";
		}
		
		try {
			if(Integer.parseInt(tfPriceOfService.getText())<0) {
				message +="\t Ingrese un precio valido";
			}
		}catch(NumberFormatException e) {
			message+="\t ingrese el precio correctamente";
		}
		
		return message;
	}
	
	private void notifyAction(String message) {
		lMessageErrors.setText(message);
		Timeline timeline = new Timeline(
				new KeyFrame(
						Duration.seconds(3),
						e->{lMessageErrors.setText("");
				
						}));
		timeline.setCycleCount(1);
		timeline.play();
		
	}
	
	private void cleanForm() {
		tfNameOfService.clear();
		tfPriceOfService.clear();
		cbSelectServiceDay.getSelectionModel().selectFirst();
	}
}
